
plinkImage="h3abionet_org/py3plink"
py3Image = "h3abionet_org/py3plink"
gemmaImage="h3abionet_org/h3agwas-gemma"
bioperlImage="bioperl/bioperl"
rEngineImage="h3abionet_org/h3agwas-r"
latexImage="h3abionet_org/h3agwas-texlive"
swarmPort = '2376'

manifest {
    homePage = 'http://github.com/h3abionet/h3agwas'
    description = 'GWAS Pipeline for H3Africa'
    mainScript = 'plink-qc.nf'
}


aws {
    accessKey =''
    secretKey =''
    region    ='eu-west-1'
}

cloud {
    imageId = "ami-0768f27e"      // specify your AMI id here
    instanceType = "m4.xlarge"
    subnetId = "null"
    sharedStorageId   = "null"
    sharedStorageMount = "/mnt/shared"
    bootStorageSize = "20GB"     // Size of disk for images spawned
    //   instanceStorageMount = ""   // Set a common mount point for images
    //   instanceStorageDevice = ""  // Set a common block device for images
    autoscale {
        enabled = true
        maxInstances = 1
        terminateWhenIdle = true
    }

}


params {

    // Directories
    work_dir                = "/$PWD"
    input_dir               = "${params.work_dir}/input"
    output_dir              = "${params.work_dir}/output"
    scripts                 = "${params.work_dir}/scripts"
    output                  = "out"
    
    // Data
    input_pat            = "sampleA"


    high_ld_regions_fname = ""
    case_control         = "sample.phe"
    case_control_col     = "PHE"
    sexinfo_available    = true
    cut_het_high         = "0.343"
    cut_het_low           = "0.15"
    cut_diff_miss         = "0.05"
    cut_maf                = "0.01"
    cut_mind              = "0.02"
    cut_geno              = "0.01"
    cut_hwe               = "0.008"
    pi_hat                = "0.11"
    f_lo_male             = 0.8 // default for F-sex check -- >= means male
    f_hi_female           = 0.2 //  <= means female
    phenotype = 0
    pheno_col = "all"
    batch = 0
    batch_col = ""

    strandreport         =""
    manifest              =  ""

    accessKey            = ""
    secretKey            = ""
    region               = "eu-west-1"
    AMI                  = "ami-9ca7b2fa"
    instanceType         = "m4.xlarge"
    bootStorageSize      = "20GB"
    maxInstances         = "1"

    plink_process_memory = "750MB"
    other_process_memory = "750MB"
    sharedStorageMount   = "/mnt/shared"
    max_plink_cores      = "4"


}
profiles {

    // For execution on a local machine, no containerization. -- Default
    standard {
        process.executor = 'local'
    }

    // For execution on a PBS scheduler, no containerization.
    pbs {
        process.executor = 'pbs'
        process.queue = 'batch'
    }

    // For execution on a PBS scheduler with containerization.
    pbsDocker {

        process.executor = 'pbs'
	process.$inMD5.container = py3Image
	process.$getDuplicateMarkers.container = py3Image
        process.$removeDuplicateSNPs.container = plinkImage
	process.$getX.container      = plinkImage
	process.$analyseX.container  = py3Image
        process.$identifyIndivDiscSexinfo.container = plinkImage
        process.$generateSnpMissingnessPlot.container = rEngineImage
        process.$generateIndivMissingnessPlot.container=rEngineImage
	process.$getInitMaf.container  = plinkImage
	process.$showInitMAF.container = py3Image
        process.$removeQCPhase1.container = plinkImage
        process.$compPCA.container = plinkImage
        process.$drawPCA.container = rEngineImage
        process.$pruneForIBD.container = plinkImage
	process.$findRelatedIndiv.container  = py3Image
        process.$calculateSampleHetrozygosity.container = plinkImage
        process.$generateMissHetPlot.container = rEngineImage
	process.$getBadIndivsMissingHet.container = py3Image
        process.$removeQCIndivs.container = plinkImage
        process.$calculateSnpSkewStatus.container = plinkImage
        process.$generateDifferentialMissingnessPlot.container = rEngineImage
	process.$findSnpExtremeDifferentialMissingness.container = bioperlImage
        process.$removeSkewSnps.container = plinkImage
        process.$calculateMaf.container = plinkImage
        process.$generateMafPlot.container = rEngineImage
	process.$findHWEofSNPs.container = bioperlImage
        process.$generateHwePlot.container = rEngineImage
        process.$batchProc.container = py3Image
        process.$produceReports.container  =latexImage

        process.$computeTest.container     = gemmaImage
        process.$annotation.container      = bioperlImage

        process.$illumina2lgen.container        = py3Image
        process.$bedify.container               = py3Image
        process.$combineBed.container          = py3Image
        process.$getFlips.container             = py3Image
        process.$alignStrand.container          = py3Image
        process.$fixFam.container               = py3Image

        docker.remove      = true
        docker.runOptions  = '--rm'
        docker.registry    = 'quay.io'
        docker.enabled     = true
        docker.temp        = 'auto'
        docker.fixOwnership= true

    }

    // Execute pipeline with Docker locally
    docker {


        process.executor = 'local'
	process.$inMD5.container = py3Image
	process.$getDuplicateMarkers.container = py3Image
        process.$removeDuplicateSNPs.container = plinkImage
	process.$getX.container      = plinkImage
	process.$analyseX.container  = py3Image
        process.$identifyIndivDiscSexinfo.container = plinkImage
        process.$generateSnpMissingnessPlot.container = rEngineImage
        process.$generateIndivMissingnessPlot.container=rEngineImage
	process.$getInitMaf.container  = plinkImage
	process.$showInitMAF.container = py3Image
        process.$removeQCPhase1.container = plinkImage
        process.$compPCA.container = plinkImage
        process.$drawPCA.container = rEngineImage
        process.$pruneForIBD.container = plinkImage
	process.$findRelatedIndiv.container  = py3Image
        process.$calculateSampleHeterozygosity.container = plinkImage
        process.$generateMissHetPlot.container = rEngineImage
	process.$getBadIndivsMissingHet.container = py3Image
        process.$removeQCIndivs.container = plinkImage
        process.$calculateSnpSkewStatus.container = plinkImage
        process.$generateDifferentialMissingnessPlot.container = rEngineImage
	process.$findSnpExtremeDifferentialMissingness.container = py3Image
        process.$removeSkewSnps.container = plinkImage
        process.$calculateMaf.container = plinkImage
        process.$generateMafPlot.container = rEngineImage
	process.$findHWEofSNPs.container = bioperlImage
        process.$generateHwePlot.container = rEngineImage
        process.$batchProc.container = py3Image
        process.$produceReports.container  =latexImage


        process.$illumina2lgen.container        = py3Image
        process.$bedify.container               = py3Image
        process.$combineBed.container          = py3Image
        process.$getFlips.container             = py3Image
        process.$alignStrand.container          = py3Image
        process.$fixFam.container               = py3Image

        docker.remove      = true
        docker.runOptions  = '--rm'
	      docker.registry    = 'quay.io'
        docker.enabled     = true
        docker.temp        = 'auto'
        docker.fixOwnership= true
        docker.process.executor = 'local'
    }

    dockerpbs {
        process.executor = 'pbs'
        process.$removeDuplicateSNPs.container = plinkImage
        process.$identifyIndivDiscSexinfo.container = plinkImage
        process.$calculateSampleMissing.container = plinkImage
        process.$calculateSampleHetrozygosity.container = plinkImage
        process.$compPCA.container = plinkImage
        process.$pruneForIBD.container = plinkImage
        process.$removeQCIndivs.container = plinkImage
        process.$calculateMaf.container = plinkImage
        process.$calculateSnpMissingness.container = plinkImage
        process.$calculateSnpSkewStatus.container = plinkImage
        process.$removeQCPhase1.container = plinkImage
        process.$computePhase0.container = plinkImage
        process.$drawPCA.container = rEngineImage
        process.$generateIndivMissingnessPlot.container=rEngineImage
        process.$generateMissHetPlot.container = rEngineImage
        process.$generateMafPlot.container = rEngineImage
        process.$generateSnpMissingnessPlot.container = rEngineImage
        process.$generateDifferentialMissingnessPlot.container = rEngineImage
        process.$generateHwePlot.container = rEngineImage
        process.$produceReports.container  =latexImage
        process.$lgen2ped.container        = plinkImage
        process.$createBed.container      = plinkImage
        process.$lgen2ped.container        = plinkImage
        process.$flip.container            = bioperlImage
        process.$computePCA.container      = plinkImage
        process.$computeTest.container     = "$gemmaImage"
        process.$annotation.container      = "$bioperlImage"

        docker.remove      = true
        docker.runOptions  = '--rm'
	      docker.registry    = 'quay.io'
        docker.enabled     = true
        docker.temp        = 'auto'
        docker.fixOwnership= true
        docker.process.executor = 'local'
        docker.fixOwnership = true
    }


    // Execute pipeline with Docker Swarm setup
    dockerSwarm {

        process.$removeDuplicateSNPs.container = "$plinkImage"
        process.$identifyIndivDiscSexinfo.container = "$plinkImage"
        process.$calculateSampleMissing.container = "$plinkImage"
        process.$calculateSampleHetrozygosity.container = "$plinkImage"
        process.$compPCA.container = "$plinkImage"
        process.$pruneForIBD.container = "$plinkImage"
        process.$removeQCIndivs.container = "$plinkImage"
        process.$calculateMaf.container = "$plinkImage"
        process.$calculateSnpMissingness.container = "$plinkImage"
        process.$calculateSnpSkewStatus.container = "$plinkImage"
        process.$removeQCPhase1.container = "$plinkImage"
        process.$computePhase0.container = "$plinkImage"
        process.$drawPCA.container = "$rEngineImage"
        process.$generateIndivMissingnessPlot.container="$rEngineImage"
        process.$generateMissHetPlot.container = "$rEngineImage"
        process.$generateMafPlot.container = "$rEngineImage"
        process.$generateSnpMissingnessPlot.container = "$rEngineImage"
        process.$generateDifferentialMissingnessPlot.container = "$rEngineImage"
        process.$generateHwePlot.container = "$rEngineImage"
        process.$produceReports.container  ="$latexImage"
        process.$lgen2ped.container        = "$plinkImage"
        process.$createBed.container      = "$plinkImage"
        process.$lgen2ped.container        = "$plinkImage"
        process.$flip.container            = "$bioperlImage"
        process.$computePCA.container      = "$plinkImage"
        process.$computeTest.container     = "$gemmaImage"
        process.$annotation.container      = "$bioperlImage"

        docker.remove      = true
        docker.runOptions  = '--rm'
	      docker.registry    = 'quay.io'
        docker.enabled     = true
        docker.temp        = 'auto'
        docker.fixOwnership= true
        docker.process.executor = 'local'
        docker.engineOptions = "-H :$swarmPort"
    }



}

